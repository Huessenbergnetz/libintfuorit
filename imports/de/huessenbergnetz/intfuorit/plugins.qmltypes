import QtQuick.tooling 1.2

// This file describes the plugin-supplied types contained in the library.
// It is used for QML tooling purposes only.
//
// This file was auto-generated by:
// 'qmlplugindump-qt5 -v -nonrelocatable de.huessenbergnetz.intfuorit 1.0 /home/buschmann/Dokumente/Entwicklung/Projekte/Intfuorit/libintfuorit/build/imports/'

Module {
    dependencies: ["QtQuick 2.8"]
    Component {
        name: "Intfuorit::BaseFilterModel"
        prototype: "QSortFilterProxyModel"
        Property { name: "inOperation"; type: "bool"; isReadonly: true }
        Property { name: "error"; type: "Intfuorit::Error"; isReadonly: true }
        Property { name: "cachePeriod"; type: "uint" }
        Property { name: "userAgent"; type: "string" }
        Property { name: "search"; type: "string" }
        Property { name: "sortOrder"; type: "Qt::SortOrder" }
        Signal {
            name: "inOperationChanged"
            Parameter { name: "inOperation"; type: "bool" }
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "error"; type: "Intfuorit::Error" }
        }
        Signal {
            name: "failed"
            Parameter { name: "error"; type: "Intfuorit::Error" }
        }
        Signal {
            name: "cachePeriodChanged"
            Parameter { name: "cachePeriod"; type: "uint" }
        }
        Signal {
            name: "userAgentChanged"
            Parameter { name: "userAgent"; type: "string" }
        }
        Signal {
            name: "searchChanged"
            Parameter { name: "search"; type: "string" }
        }
        Signal {
            name: "sortOrderChanged"
            Parameter { name: "sortOrder"; type: "Qt::SortOrder" }
        }
        Method { name: "clear" }
    }
    Component {
        name: "Intfuorit::BaseModel"
        prototype: "QAbstractItemModel"
        Property { name: "inOperation"; type: "bool"; isReadonly: true }
        Property { name: "error"; type: "Intfuorit::Error"; isReadonly: true }
        Property { name: "cachePeriod"; type: "uint" }
        Property { name: "userAgent"; type: "string" }
        Signal {
            name: "inOperationChanged"
            Parameter { name: "inOperation"; type: "bool" }
        }
        Signal {
            name: "errorChanged"
            Parameter { name: "error"; type: "Intfuorit::Error" }
        }
        Signal {
            name: "failed"
            Parameter { name: "error"; type: "Intfuorit::Error" }
        }
        Signal {
            name: "cachePeriodChanged"
            Parameter { name: "cachePeriod"; type: "uint" }
        }
        Signal {
            name: "userAgentChanged"
            Parameter { name: "userAgent"; type: "string" }
        }
        Method { name: "clear" }
    }
    Component {
        name: "Intfuorit::BreachesListFilterModel"
        prototype: "Intfuorit::BaseFilterModel"
        exports: ["de.huessenbergnetz.intfuorit/BreachesListFilterModel 1.0"]
        exportMetaObjectRevisions: [0]
        Method { name: "clear" }
        Method {
            name: "getAllBreaches"
            Parameter { name: "reload"; type: "bool" }
        }
        Method { name: "getAllBreaches" }
        Method {
            name: "getAllBreaches"
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "reload"; type: "bool" }
        }
        Method {
            name: "getAllBreaches"
            Parameter { name: "domain"; type: "string" }
        }
    }
    Component {
        name: "Intfuorit::BreachesListModel"
        prototype: "Intfuorit::BreachesModel"
        exports: ["de.huessenbergnetz.intfuorit/BreachesListModel 1.0"]
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Roles"
            values: {
                "Title": 257,
                "Name": 258,
                "Domain": 259,
                "BreachDate": 260,
                "AddedDate": 261,
                "ModifiedDate": 262,
                "PwnCount": 263,
                "Description": 264,
                "DataClasses": 265,
                "DataClassesTranslated": 266,
                "DataClassesTranslatedString": 267,
                "IsVerified": 268,
                "IsFabricated": 269,
                "IsSensitive": 270,
                "IsActive": 271,
                "IsRetired": 272,
                "IsSpamList": 273,
                "LogoPath": 274
            }
        }
    }
    Component {
        name: "Intfuorit::BreachesModel"
        prototype: "Intfuorit::BaseModel"
        Signal {
            name: "gotNoBreachesForAccount"
            Parameter { name: "account"; type: "string" }
        }
        Method {
            name: "getAllBreaches"
            Parameter { name: "reload"; type: "bool" }
        }
        Method { name: "getAllBreaches" }
        Method {
            name: "getAllBreaches"
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "reload"; type: "bool" }
        }
        Method {
            name: "getAllBreaches"
            Parameter { name: "domain"; type: "string" }
        }
        Method {
            name: "getBreachesForAccount"
            Parameter { name: "account"; type: "string" }
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "includeUnverified"; type: "bool" }
            Parameter { name: "reload"; type: "bool" }
        }
        Method {
            name: "getBreachesForAccount"
            Parameter { name: "account"; type: "string" }
            Parameter { name: "domain"; type: "string" }
            Parameter { name: "includeUnverified"; type: "bool" }
        }
        Method {
            name: "getBreachesForAccount"
            Parameter { name: "account"; type: "string" }
            Parameter { name: "domain"; type: "string" }
        }
        Method {
            name: "getBreachesForAccount"
            Parameter { name: "account"; type: "string" }
        }
    }
    Component {
        name: "Intfuorit::CheckPwnedPassword"
        prototype: "Intfuorit::Component"
        exports: ["de.huessenbergnetz.intfuorit/CheckPwnedPassword 1.0"]
        exportMetaObjectRevisions: [0]
        Property { name: "password"; type: "string" }
        Property { name: "count"; type: "int"; isReadonly: true }
        Signal {
            name: "passwordChanged"
            Parameter { name: "password"; type: "string" }
        }
        Signal {
            name: "countChanged"
            Parameter { name: "count"; type: "int" }
        }
        Signal {
            name: "passwordChecked"
            Parameter { name: "count"; type: "int" }
        }
        Method { name: "clear" }
        Method {
            name: "execute"
            Parameter { name: "reload"; type: "bool" }
        }
        Method { name: "execute" }
        Method {
            name: "execute"
            Parameter { name: "password"; type: "string" }
            Parameter { name: "reload"; type: "bool" }
        }
        Method {
            name: "execute"
            Parameter { name: "password"; type: "string" }
        }
    }
    Component {
        name: "Intfuorit::Component"
        prototype: "QObject"
        Property { name: "userAgent"; type: "string" }
        Property { name: "inOperation"; type: "bool"; isReadonly: true }
        Property { name: "cachePeriod"; type: "uint" }
        Property { name: "error"; type: "Intfuorit::Error"; isReadonly: true }
        Signal {
            name: "errorChanged"
            Parameter { name: "error"; type: "Intfuorit::Error" }
        }
        Signal {
            name: "inOperationChanged"
            Parameter { name: "inOperation"; type: "bool" }
        }
        Signal {
            name: "failed"
            Parameter { name: "error"; type: "Intfuorit::Error" }
        }
        Signal {
            name: "cachePeriodChanged"
            Parameter { name: "cachePeriod"; type: "uint" }
        }
        Signal {
            name: "userAgentChanged"
            Parameter { name: "userAgent"; type: "string" }
        }
        Method {
            name: "execute"
            Parameter { name: "reload"; type: "bool" }
        }
        Method { name: "execute" }
    }
    Component {
        name: "Intfuorit::Error"
        exports: ["de.huessenbergnetz.intfuorit/Error 1.0"]
        isCreatable: false
        exportMetaObjectRevisions: [0]
        Enum {
            name: "Type"
            values: {
                "NoError": 0,
                "RequestError": 1,
                "JSONParsingError": 2,
                "InputError": 3,
                "OutputError": 4,
                "ServerError": 5,
                "ApplicationError": 6,
                "FileError": 7
            }
        }
        Enum {
            name: "Severity"
            values: {
                "Nothing": 0,
                "Warning": 1,
                "Critical": 2,
                "Fatal": 3
            }
        }
        Property { name: "text"; type: "string"; isReadonly: true }
        Property { name: "type"; type: "Intfuorit::Error::Type"; isReadonly: true }
        Property { name: "severity"; type: "Intfuorit::Error::Severity"; isReadonly: true }
    }
    Component {
        name: "Intfuorit::PastesListModel"
        prototype: "Intfuorit::PastesModel"
        exports: ["de.huessenbergnetz.intfuorit/PastesListModel 1.0"]
        exportMetaObjectRevisions: [0]
    }
    Component {
        name: "Intfuorit::PastesModel"
        prototype: "Intfuorit::BaseModel"
        Signal {
            name: "gotNoPastesForAccount"
            Parameter { name: "account"; type: "string" }
        }
        Method {
            name: "getPastesForAccount"
            Parameter { name: "account"; type: "string" }
            Parameter { name: "reload"; type: "bool" }
        }
        Method {
            name: "getPastesForAccount"
            Parameter { name: "account"; type: "string" }
        }
    }
    Component {
        name: "QAbstractProxyModel"
        prototype: "QAbstractItemModel"
        Property { name: "sourceModel"; type: "QAbstractItemModel"; isPointer: true }
        Method {
            name: "mapToSource"
            type: "QModelIndex"
            Parameter { name: "proxyIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapFromSource"
            type: "QModelIndex"
            Parameter { name: "sourceIndex"; type: "QModelIndex" }
        }
        Method {
            name: "mapSelectionToSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
        Method {
            name: "mapSelectionFromSource"
            type: "QItemSelection"
            Parameter { name: "selection"; type: "QItemSelection" }
        }
    }
    Component {
        name: "QSortFilterProxyModel"
        prototype: "QAbstractProxyModel"
        Property { name: "filterRegExp"; type: "QRegExp" }
        Property { name: "filterKeyColumn"; type: "int" }
        Property { name: "dynamicSortFilter"; type: "bool" }
        Property { name: "filterCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "sortCaseSensitivity"; type: "Qt::CaseSensitivity" }
        Property { name: "isSortLocaleAware"; type: "bool" }
        Property { name: "sortRole"; type: "int" }
        Property { name: "filterRole"; type: "int" }
        Property { name: "recursiveFilteringEnabled"; type: "bool" }
        Method {
            name: "setFilterRegExp"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterWildcard"
            Parameter { name: "pattern"; type: "string" }
        }
        Method {
            name: "setFilterFixedString"
            Parameter { name: "pattern"; type: "string" }
        }
        Method { name: "clear" }
        Method { name: "invalidate" }
    }
}
